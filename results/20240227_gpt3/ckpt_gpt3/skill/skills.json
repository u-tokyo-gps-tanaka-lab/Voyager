{"mineWoodLog": {"code": "async function mineWoodLog(bot) {\n  // Explore until find a wood log\n  const woodLog = await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n    const log = bot.findBlock({\n      matching: block => {\n        return block.name.includes(\"_log\");\n      },\n      maxDistance: 32\n    });\n    return log;\n  });\n  if (woodLog) {\n    // Mine the wood log\n    await mineBlock(bot, woodLog.name, 1);\n    bot.chat(\"Wood log mined!\");\n  } else {\n    bot.chat(\"Could not find a wood log nearby.\");\n  }\n}\n\n// Call the main function", "description": "async function mineWoodLog(bot) {\n    // The function is about mining a wood log. It explores the area until finding a wood log block, then mines the wood log block once it's found, providing a success message. If no wood log is found nearby, it notifies the player that a wood log could not be found.\n}"}, "mineOakLogs": {"code": "async function mineOakLogs(bot) {\n  // Check if you have at least 2 oak logs\n  if (bot.inventory.items().find(item => item.name === 'oak_log' && item.count >= 2)) {\n    // Mine 2 oak logs\n    await mineBlock(bot, 'oak_log', 2);\n    bot.chat(\"Mined 2 oak logs!\");\n  } else {\n    bot.chat(\"Exploring to find oak logs...\");\n    // Explore until find oak logs\n    const oakLogs = await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n      const log = bot.findBlock({\n        matching: block => block.name.includes(\"_log\"),\n        maxDistance: 32\n      });\n      return log;\n    });\n    if (oakLogs) {\n      // Mine the oak logs\n      await mineBlock(bot, oakLogs.name, 2);\n      bot.chat(\"Mined 2 oak logs!\");\n    } else {\n      bot.chat(\"Could not find oak logs nearby.\");\n    }\n  }\n}", "description": "async function mineOakLogs(bot) {\n    // The function is focused on mining 2 oak logs. It first checks if there are at least 2 oak logs in the inventory; if so, it mines them. If not, it explores the environment to find oak logs within a certain range. Once oak logs are located, it proceeds to mine 2 oak logs. If oak logs are not found nearby, it notifies the player that oak logs could not be found.\n}"}, "craftWoodenTools": {"code": "async function craftWoodenTools(bot) {\n  const oakLogCount = bot.inventory.items().reduce((acc, item) => item.name === 'oak_log' ? acc + item.count : acc, 0);\n  const craftingTable = bot.inventory.items().find(item => item.name === 'crafting_table');\n  if (!craftingTable) {\n    bot.chat(\"Exploring to find a crafting table...\");\n    const foundCraftingTable = await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n      const block = bot.findBlock({\n        matching: mcData.blocksByName.crafting_table.id,\n        maxDistance: 32\n      });\n      return block;\n    });\n    if (!foundCraftingTable) {\n      bot.chat(\"Could not find a crafting table nearby.\");\n      return;\n    }\n  }\n  if (oakLogCount < 3) {\n    bot.chat(\"Exploring to find oak logs...\");\n    const oakLogs = await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n      const log = bot.findBlock({\n        matching: block => block.name.includes(\"_log\"),\n        maxDistance: 32\n      });\n      return log;\n    });\n    if (oakLogs) {\n      await mineBlock(bot, oakLogs.name, 3 - oakLogCount);\n      bot.chat(\"Mined oak logs!\");\n    } else {\n      bot.chat(\"Could not find enough oak logs nearby.\");\n      return;\n    }\n  }\n  await craftItem(bot, 'wooden_pickaxe', 1);\n  await craftItem(bot, 'wooden_axe', 1);\n  await craftItem(bot, 'wooden_shovel', 1);\n  bot.chat(\"Crafted wooden tools!\");\n}", "description": "async function craftWoodenTools(bot) {\n    // The function crafts wooden tools by checking the inventory for oak logs and a crafting table. If the crafting table is not available, it explores to find one. It then checks for oak logs and mines them if needed. After ensuring the necessary resources, it crafts a wooden pickaxe, axe, and shovel. Finally, it notifies the user that the wooden tools have been crafted.\n}"}, "craftStoneTools": {"code": "async function craftStoneTools(bot) {\n  const craftingTable = bot.inventory.items().find(item => item.name === 'crafting_table');\n  if (!craftingTable) {\n    bot.chat(\"Exploring to find a crafting table...\");\n    const foundCraftingTable = await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n      const block = bot.findBlock({\n        matching: mcData.blocksByName.crafting_table.id,\n        maxDistance: 32\n      });\n      return block;\n    });\n    if (!foundCraftingTable) {\n      bot.chat(\"Could not find a crafting table nearby.\");\n      return;\n    }\n  }\n  const oakPlankCount = bot.inventory.items().reduce((acc, item) => item.name === 'oak_planks' ? acc + item.count : acc, 0);\n  if (oakPlankCount < 2) {\n    bot.chat(\"Exploring to find oak logs...\");\n    const oakLogs = await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n      const log = bot.findBlock({\n        matching: block => block.name.includes(\"_log\"),\n        maxDistance: 32\n      });\n      return log;\n    });\n    if (oakLogs) {\n      await mineBlock(bot, oakLogs.name, 2 - oakPlankCount);\n      bot.chat(\"Mined oak logs!\");\n      await craftItem(bot, 'oak_planks', 2 - oakPlankCount);\n      bot.chat(\"Crafted oak planks!\");\n    } else {\n      bot.chat(\"Could not find enough oak logs nearby.\");\n      return;\n    }\n  }\n  const stoneCount = bot.inventory.items().reduce((acc, item) => item.name === 'stone' ? acc + item.count : acc, 0);\n  if (stoneCount < 3) {\n    bot.chat(\"Exploring to find stone...\");\n    const stone = await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n      const block = bot.findBlock({\n        matching: block => block.name === 'stone',\n        maxDistance: 32\n      });\n      return block;\n    });\n    if (stone) {\n      await mineBlock(bot, 'stone', 3 - stoneCount);\n      bot.chat(\"Mined stone!\");\n    } else {\n      bot.chat(\"Could not find enough stone nearby.\");\n      return;\n    }\n  }\n  const sticksCount = bot.inventory.items().reduce((acc, item) => item.name === 'stick' ? acc + item.count : acc, 0);\n  if (sticksCount < 3) {\n    bot.chat(\"Crafting sticks...\");\n    await craftItem(bot, 'stick', 3 - sticksCount);\n    bot.chat(\"Crafted sticks!\");\n  }\n  await placeItem(bot, 'crafting_table', bot.entity.position.offset(1, 0, 0));\n  await craftItem(bot, 'stone_pickaxe', 1);\n  await craftItem(bot, 'stone_axe', 1);\n  await craftItem(bot, 'stone_shovel', 1);\n  bot.chat(\"Crafted stone tools!\");\n}", "description": "async function craftStoneTools(bot) {\n    // The function crafts stone tools by first checking for a crafting table and exploring to find one if not available. It then ensures the presence of oak planks and oak logs by exploring and mining if necessary. Next, it checks for the required amount of stone and explores to find and mine it if needed. After ensuring an adequate supply of sticks through crafting, it places a crafting table, then crafts a stone pickaxe, axe, and shovel. Finally, it notifies the successful crafting of stone tools.\n}"}, "craftIronTools": {"code": "async function craftIronTools(bot) {\n  // Check if the player has at least 3 iron ingots\n  const ironIngotCount = bot.inventory.items().reduce((acc, item) => item.name === 'iron_ingot' ? acc + item.count : acc, 0);\n  if (ironIngotCount < 3) {\n    bot.chat(\"Exploring to find iron ore...\");\n    const ironOre = await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n      const ore = bot.findBlock({\n        matching: block => block.name === 'iron_ore',\n        maxDistance: 32\n      });\n      return ore;\n    });\n    if (ironOre) {\n      await mineBlock(bot, 'iron_ore', 1);\n      bot.chat(\"Mined iron ore!\");\n      // Check if the player has a furnace nearby\n      const furnace = bot.findBlock({\n        matching: mcData.blocksByName.furnace.id,\n        maxDistance: 32\n      });\n      if (!furnace) {\n        bot.chat(\"Exploring to find a furnace...\");\n        const foundFurnace = await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n          const block = bot.findBlock({\n            matching: mcData.blocksByName.furnace.id,\n            maxDistance: 32\n          });\n          return block;\n        });\n        if (!foundFurnace) {\n          bot.chat(\"Could not find a furnace nearby.\");\n          return;\n        }\n      }\n      await smeltItem(bot, 'iron_ingot', 'oak_planks', 1);\n      bot.chat(\"Smelted iron ingot!\");\n    } else {\n      bot.chat(\"Could not find iron ore nearby.\");\n      return;\n    }\n  }\n\n  // Check if the player has at least 5 sticks\n  const stickCount = bot.inventory.items().reduce((acc, item) => item.name === 'stick' ? acc + item.count : acc, 0);\n  if (stickCount < 5) {\n    bot.chat(\"Crafting sticks...\");\n    await craftItem(bot, 'stick', 5 - stickCount);\n    bot.chat(\"Crafted sticks!\");\n  }\n\n  // Check if the player has a crafting table\n  const craftingTable = bot.inventory.items().find(item => item.name === 'crafting_table');\n  if (!craftingTable) {\n    bot.chat(\"Exploring to find a crafting table...\");\n    const foundCraftingTable = await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n      const block = bot.findBlock({\n        matching: mcData.blocksByName.crafting_table.id,\n        maxDistance: 32\n      });\n      return block;\n    });\n    if (!foundCraftingTable) {\n      bot.chat(\"Could not find a crafting table nearby.\");\n      return;\n    }\n  }\n\n  // Craft iron tools\n  await craftItem(bot, 'iron_pickaxe', 1);\n  await craftItem(bot, 'iron_axe', 1);\n  await craftItem(bot, 'iron_shovel', 1);\n  bot.chat(\"Crafted iron tools!\");\n}", "description": "async function craftIronTools(bot) {\n    // The function crafts iron tools by first checking the player's inventory for iron ingots and sticks. If there are not enough iron ingots, it explores to find iron ore, mines it, locates a furnace, smelts the ore into ingots. Then, it checks for sticks and crafts them if needed. Next, it ensures the presence of a crafting table by exploring if necessary. Finally, it crafts an iron pickaxe, axe, and shovel, notifying the player after each successful crafting action.\n}"}, "mineDiamonds": {"code": "async function mineDiamonds(bot) {\n  const hasPickaxe = bot.inventory.items().some(item => item.name === 'iron_pickaxe' || item.name === 'diamond_pickaxe');\n  if (!hasPickaxe) {\n    bot.chat(\"Crafting an iron pickaxe...\");\n    const oakPlankCount = bot.inventory.items().find(item => item.name === 'oak_planks')?.count || 0;\n    const stickCount = bot.inventory.items().find(item => item.name === 'stick')?.count || 0;\n    if (oakPlankCount < 3 || stickCount < 2) {\n      bot.chat(\"Gathering resources to craft an iron pickaxe...\");\n      if (oakPlankCount < 3) {\n        await mineOakLogs(bot);\n      }\n      if (stickCount < 2) {\n        await craftItem(bot, 'stick', 2 - stickCount);\n      }\n      await craftItem(bot, 'iron_pickaxe', 1);\n      bot.chat(\"Crafted an iron pickaxe!\");\n    }\n  }\n  let diamondsMined = 0;\n  while (diamondsMined < 5) {\n    bot.chat(`Exploring to find diamond ore block ${diamondsMined + 1}...`);\n    const diamondOre = await exploreUntil(bot, new Vec3(Math.floor(Math.random() * 3) - 1, -1, Math.floor(Math.random() * 3) - 1), 60, () => {\n      const ore = bot.findBlock({\n        matching: block => block.name === 'diamond_ore',\n        maxDistance: 32\n      });\n      return ore;\n    });\n    if (diamondOre) {\n      await mineBlock(bot, 'diamond_ore', 1);\n      diamondsMined++;\n      bot.chat(`Mined diamond ore block ${diamondsMined}!`);\n    } else {\n      bot.chat(\"Could not find diamond ore nearby.\");\n      break;\n    }\n  }\n  bot.chat(\"Mined 5 diamonds!\");\n}", "description": "async function mineDiamonds(bot) {\n    // The function is focused on mining 5 diamond ore blocks. It checks if the bot has an iron or diamond pickaxe; if not, it crafts an iron pickaxe using oak planks and sticks. Then, it iterates through exploring to find diamond ore blocks randomly within a certain range. Once a diamond ore block is found, it mines it and repeats the process until 5 diamond ore blocks are mined, keeping track of the count. If unable to find diamond ore nearby, it stops the mining process and reports the total number of diamonds mined in the end.\n}"}, "craftDiamondPickaxe": {"code": "async function craftDiamondPickaxe(bot) {\n  const diamondCount = bot.inventory.items().reduce((acc, item) => item.name === 'diamond' ? acc + item.count : acc, 0);\n  const stickCount = bot.inventory.items().reduce((acc, item) => item.name === 'stick' ? acc + item.count : acc, 0);\n  if (diamondCount < 3 || stickCount < 2) {\n    bot.chat(\"Gathering resources to craft a diamond pickaxe...\");\n    if (diamondCount < 3) {\n      bot.chat(\"Exploring to find diamond ore...\");\n      const diamondOre = await exploreUntil(bot, new Vec3(Math.floor(Math.random() * 3) - 1, -1, Math.floor(Math.random() * 3) - 1), 60, () => {\n        const ore = bot.findBlock({\n          matching: block => block.name === 'diamond_ore',\n          maxDistance: 32\n        });\n        return ore;\n      });\n      if (diamondOre) {\n        await mineBlock(bot, 'diamond_ore', 1);\n        bot.chat(\"Mined diamond ore!\");\n      } else {\n        bot.chat(\"Could not find diamond ore nearby.\");\n        return;\n      }\n    }\n    if (stickCount < 2) {\n      bot.chat(\"Crafting sticks...\");\n      await craftItem(bot, 'stick', 2 - stickCount);\n      bot.chat(\"Crafted sticks!\");\n    }\n  }\n  const craftingTable = bot.inventory.items().find(item => item.name === 'crafting_table');\n  if (!craftingTable) {\n    bot.chat(\"Placing a crafting table...\");\n    await placeItem(bot, 'crafting_table', bot.entity.position.offset(1, 0, 0));\n  }\n  await craftItem(bot, 'diamond_pickaxe', 1);\n  bot.chat(\"Crafted a diamond pickaxe!\");\n}\n\n// Call the function to craft a diamond pickaxe", "description": "async function craftDiamondPickaxe(bot) {\n    // The function crafts a diamond pickaxe by checking the inventory for required resources. If there are not enough diamonds or sticks, it gathers resources by exploring for diamond ore or crafting sticks. Once the necessary resources are available, it checks for a crafting table in the inventory and places one if not found. Finally, it crafts a diamond pickaxe and notifies the successful crafting process.\n}"}, "mineObsidian": {"code": "async function mineObsidian(bot) {\n  const hasDiamondPickaxe = bot.inventory.items().some(item => item.name === 'diamond_pickaxe' || item.name === 'netherite_pickaxe');\n  const hasWaterBucket = bot.inventory.items().some(item => item.name === 'water_bucket');\n  if (!hasDiamondPickaxe) {\n    bot.chat(\"Gathering resources to craft a diamond pickaxe...\");\n    const diamondCount = bot.inventory.items().reduce((acc, item) => item.name === 'diamond' || item.name === 'netherite_ingot' ? acc + item.count : acc, 0);\n    const stickCount = bot.inventory.items().find(item => item.name === 'stick')?.count || 0;\n    if (diamondCount < 3) {\n      bot.chat(\"Exploring to find diamond ore...\");\n      const diamondOre = await exploreUntil(bot, new Vec3(Math.floor(Math.random() * 3) - 1, -1, Math.floor(Math.random() * 3) - 1), 60, () => {\n        const ore = bot.findBlock({\n          matching: block => block.name === 'diamond_ore' || block.name === 'ancient_debris',\n          maxDistance: 32\n        });\n        return ore;\n      });\n      if (diamondOre) {\n        await mineBlock(bot, 'diamond_ore', 1);\n      } else {\n        bot.chat(\"Could not find diamond ore nearby, please explore first.\");\n        return;\n      }\n    }\n    if (stickCount < 2) {\n      await craftItem(bot, 'stick', 2 - stickCount);\n    }\n    await craftItem(bot, 'diamond_pickaxe', 1);\n    bot.chat(\"Crafted a diamond pickaxe!\");\n  }\n  if (!hasWaterBucket) {\n    bot.chat(\"Gathering resources to craft a water bucket...\");\n    // Implement code to gather resources and craft a water bucket\n  }\n  bot.chat(\"Exploring to find a lava pool...\");\n  const lavaPool = await exploreUntil(bot, new Vec3(Math.floor(Math.random() * 3) - 1, 0, Math.floor(Math.random() * 3) - 1), 60, () => {\n    const block = bot.findBlock({\n      matching: block => block.name === 'lava',\n      maxDistance: 32\n    });\n    return block;\n  });\n  if (lavaPool) {\n    bot.chat(\"Found a lava pool! Mining obsidian...\");\n    for (let i = 0; i < 10; i++) {\n      const obsidian = await exploreUntil(bot, new Vec3(Math.floor(Math.random() * 3) - 1, 0, Math.floor(Math.random() * 3) - 1), 60, () => {\n        const block = bot.findBlock({\n          matching: block => block.name === 'obsidian',\n          maxDistance: 32\n        });\n        return block;\n      });\n      if (obsidian) {\n        await mineBlock(bot, 'obsidian', 1);\n        bot.chat(`Mined obsidian block ${i + 1}!`);\n      } else {\n        bot.chat(\"Could not find obsidian nearby.\");\n        break;\n      }\n    }\n    bot.chat(\"Mined 10 obsidian blocks!\");\n  } else {\n    bot.chat(\"Could not find a lava pool nearby.\");\n  }\n}", "description": "async function mineObsidian(bot) {\n    // The function is about mining obsidian blocks after ensuring the availability of a diamond or netherite pickaxe. It checks for the presence of a water bucket and resources to craft it. If a diamond pickaxe is not available, it gathers resources by exploring to craft one. The bot then explores to locate a lava pool and mines 10 obsidian blocks from the pool. If the required resources are insufficient, it crafts the necessary items before proceeding with mining obsidian.\n}"}, "gatherLeather": {"code": "async function gatherLeather(bot) {\n  // Check if there are cows nearby\n  let cow = bot.nearestEntity(entity => entity.name === 'cow' && entity.position.distanceTo(bot.entity.position) < 32);\n  if (!cow) {\n    bot.chat(\"Exploring to find a cow...\");\n    cow = await exploreUntil(bot, new Vec3(Math.floor(Math.random() * 3) - 1, 0, Math.floor(Math.random() * 3) - 1), 60, () => {\n      const foundCow = bot.nearestEntity(entity => entity.name === 'cow' && entity.position.distanceTo(bot.entity.position) < 32);\n      return foundCow;\n    });\n  }\n  if (cow) {\n    bot.chat(\"Killing the cow to gather leather...\");\n    await killMob(bot, 'cow', 300);\n    bot.chat(\"Leather gathered!\");\n  } else {\n    bot.chat(\"Could not find a cow nearby.\");\n  }\n}\n\n// Call the main function", "description": "async function gatherLeather(bot) {\n    // The function is about gathering leather by locating and killing cows nearby. It first checks for cows within a certain range, and if none are found, it explores the area randomly to find one. Once a cow is located, it proceeds to kill the cow to gather leather. If no cows are found nearby, it notifies the player that no cows were found in the vicinity.\n}"}, "gatherSugarCane": {"code": "async function gatherSugarCane(bot) {\n  // Check if there is sugar cane in the inventory\n  const sugarCaneInInventory = bot.inventory.items().find(item => item.name === 'sugar_cane');\n  if (!sugarCaneInInventory) {\n    bot.chat(\"Exploring to find sugar cane...\");\n    const sugarCane = await exploreUntil(bot, new Vec3(Math.floor(Math.random() * 3) - 1, 0, Math.floor(Math.random() * 3) - 1), 60, () => {\n      const foundSugarCane = bot.findBlock({\n        matching: block => block.name === 'sugar_cane',\n        maxDistance: 32\n      });\n      return foundSugarCane;\n    });\n    if (!sugarCane) {\n      bot.chat(\"Could not find sugar cane nearby.\");\n      return;\n    }\n    bot.chat(\"Mining sugar cane...\");\n    await mineBlock(bot, \"sugar_cane\", 3); // Gather 3 sugar cane blocks\n    bot.chat(\"Sugar cane collected!\");\n  }\n\n  // Check if there is a crafting table in the inventory\n  const craftingTableInInventory = bot.inventory.items().find(item => item.name === 'crafting_table');\n  if (!craftingTableInInventory) {\n    bot.chat(\"Exploring to find a crafting table...\");\n    await exploreUntil(bot, new Vec3(Math.floor(Math.random() * 3) - 1, 0, Math.floor(Math.random() * 3) - 1), 60, () => {\n      const block = bot.findBlock({\n        matching: mcData.blocksByName.crafting_table.id,\n        maxDistance: 32\n      });\n      return block;\n    });\n  }\n  bot.chat(\"Crafting paper...\");\n  await craftItem(bot, 'paper', 1); // Craft paper from sugar cane\n  bot.chat(\"Paper crafted!\");\n}", "description": "async function gatherSugarCane(bot) {\n    // The function gathers sugar cane by exploring and mining it if not already in the inventory, then crafts paper from the sugar cane by searching for a crafting table and crafting the paper, notifying the player at each step of the process.\n}"}}